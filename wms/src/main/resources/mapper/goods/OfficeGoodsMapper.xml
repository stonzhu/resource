<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.goods.mapper.OfficeGoodsMapper">
    
    <resultMap type="OfficeGoods" id="OfficeGoodsResult">
        <result property="goodsId"    column="goods_id"    />
        <result property="goodsName"    column="goods_name"    />
        <result property="financeCode"    column="finance_code"    />
        <result property="normsModel"    column="norms_model"    />
        <result property="unit"    column="unit"    />
        <result property="price"    column="price"    />
        <result property="classType"    column="classType"    />
        <result property="isPublic"    column="is_public"    />
        <result property="picture"    column="picture"    />
    </resultMap>

    <sql id="selectOfficeGoodsVo">
        select goods_id, goods_name, finance_code, norms_model, unit, price, classType, is_public, picture from office_goods
    </sql>

    <select id="selectOfficeGoodsList" parameterType="OfficeGoods" resultMap="OfficeGoodsResult">
        <include refid="selectOfficeGoodsVo"/>
        <where>  
            <if test="goodsName != null  and goodsName != ''"> and goods_name like concat('%', #{goodsName}, '%')</if>
            <if test="financeCode != null  and financeCode != ''"> and finance_code = #{financeCode}</if>
            <if test="normsModel != null  and normsModel != ''"> and norms_model = #{normsModel}</if>
            <if test="classType != null  and classType != ''"> and classType = #{classType}</if>
            <if test="isPublic != null  and isPublic != ''"> and is_public = #{isPublic}</if>
        </where>
    </select>

    <select id="selectOfficeGoodsListByNameModel" parameterType="OfficeGoods" resultMap="OfficeGoodsResult">
        <include refid="selectOfficeGoodsVo"/>
        <where>
            <if test="goodsName != null  and goodsName != ''"> and goods_name =#{goodsName} </if>
            <if test="normsModel != null  and normsModel != ''"> and norms_model = #{normsModel}</if>
            <if test="price != null  and price != ''"> and price = #{price}</if>
        </where>
    </select>

    
    <select id="selectOfficeGoodsByGoodsId" parameterType="Long" resultMap="OfficeGoodsResult">
        <include refid="selectOfficeGoodsVo"/>
        where goods_id = #{goodsId}
    </select>
        
    <insert id="insertOfficeGoods" parameterType="OfficeGoods" useGeneratedKeys="true" keyProperty="goodsId">
        insert into office_goods
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="goodsName != null and goodsName != ''">goods_name,</if>
            <if test="financeCode != null">finance_code,</if>
            <if test="normsModel != null">norms_model,</if>
            <if test="unit != null">unit,</if>
            <if test="price != null">price,</if>
            <if test="classType != null">classType,</if>
            <if test="isPublic != null">is_public,</if>
            <if test="picture != null">picture,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="goodsName != null and goodsName != ''">#{goodsName},</if>
            <if test="financeCode != null">#{financeCode},</if>
            <if test="normsModel != null">#{normsModel},</if>
            <if test="unit != null">#{unit},</if>
            <if test="price != null">#{price},</if>
            <if test="classType != null">#{classType},</if>
            <if test="isPublic != null">#{isPublic},</if>
            <if test="picture != null">#{picture},</if>
         </trim>
    </insert>

    <update id="updateOfficeGoods" parameterType="OfficeGoods">
        update office_goods
        <trim prefix="SET" suffixOverrides=",">
            <if test="goodsName != null and goodsName != ''">goods_name = #{goodsName},</if>
            <if test="financeCode != null">finance_code = #{financeCode},</if>
            <if test="normsModel != null">norms_model = #{normsModel},</if>
            <if test="unit != null">unit = #{unit},</if>
            <if test="price != null">price = #{price},</if>
            <if test="classType != null">classType = #{classType},</if>
            <if test="isPublic != null">is_public = #{isPublic},</if>
            <if test="picture != null">picture = #{picture},</if>
        </trim>
        where goods_id = #{goodsId}
    </update>

    <delete id="deleteOfficeGoodsByGoodsId" parameterType="Long">
        delete from office_goods where goods_id = #{goodsId}
    </delete>

    <delete id="deleteOfficeGoodsByGoodsIds" parameterType="String">
        delete from office_goods where goods_id in 
        <foreach item="goodsId" collection="array" open="(" separator="," close=")">
            #{goodsId}
        </foreach>
    </delete>
</mapper>